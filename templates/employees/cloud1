{% extends 'employees/base.html' %}

<!-- STYLE -->
{% block style %}
<style>
    .file-list {
        width: 100%;
        border-collapse: collapse;
    }

    .file-list th, .file-list td {
        padding: 8px;
        text-align: left;
        border-bottom: 1px solid #ddd;
    }

    .file-list th {
        background-color: #f2f2f2;
    }

    .file-list tr:hover {
        background-color: #f5f5f5;
    }

    .file-icon {
        width: 24px;
        height: 24px;
        margin-right: 8px;
    }

    .action-buttons {
        display: flex;
        gap: 5px;
    }

    .action-buttons button {
        padding: 2px 5px;
        font-size: 0.8rem;
    }
</style>
{% endblock %}

<!-- CONTENT -->
{% block content %}
<div class="d-flex justify-content-between align-items-center mb-3">
    <div>
        <button {% if uid == '0' %} disabled {% endif %} class="btn btn-outline-primary d-flex align-items-center"
            id="backButton" title="Go to Previous Page">
            <i class="bi bi-arrow-left me-2"></i> Back
        </button>
    </div>

    <div class="d-flex align-items-center">
        <div class="uploader me-3">
            <form id="fileUploadForm" enctype="multipart/form-data">
                {% csrf_token %}
                <input type="file" id="fileInput" name="file" class="form-control">
            </form>
        </div>
        <div class="uploader">
            <button class="btn btn-success" data-bs-toggle="modal" data-bs-target="#createFolderModal">Create Folder</button>
        </div>
        <div class="uploader ms-3">
            <button class="btn btn-danger" id="deleteSelected">Delete Selected</button>
        </div>
    </div>
</div>

<!-- File List Table -->
<table class="file-list">
    <thead>
        <tr>
            <th><input type="checkbox" id="selectAll"></th>
            <th>Name</th>
            <th>Type</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        {% for c in context %}
        <tr>
            <td><input type="checkbox" class="file-checkbox" data-id="{{ c.id }}"></td>
            <td>
                {% if c.ftype == 'folder' %}
                <img src="/static/images/icon/folder.png" class="file-icon" alt="Folder">
                {% else %}
                <img src="/static/images/icon/{{ c.ftype }}.png" class="file-icon" alt="{{ c.ftype }}">
                {% endif %}
                {{ c.name }}
            </td>
            <td>{{ c.ftype }}</td>
            <td class="action-buttons">
                {% if c.ftype == 'folder' %}
                <button class="btn btn-info btn-sm" onclick="shareFolder('{{ c.id }}')">Share</button>
                <button class="btn btn-warning btn-sm" onclick="renameFolder('{{ c.id }}')">Rename</button>
                {% else %}
                <button class="btn btn-info btn-sm" onclick="shareFile('{{ c.id }}')">Share</button>
                <button class="btn btn-warning btn-sm" onclick="renameFile('{{ c.id }}')">Rename</button>
                {% endif %}
            </td>
        </tr>
        {% endfor %}
    </tbody>
</table>

<!-- Create Folder Modal -->
<div class="modal fade" id="createFolderModal" tabindex="-1" aria-labelledby="createFolderModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createFolderModalLabel">Create New Folder</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form method="post" id="createFolderForm">
                    {% csrf_token %}
                    <div class="mb-3">
                        <label for="folderName" class="form-label">Folder Name</label>
                        <input type="text" id="folderName" name="folder_name" class="form-control" required>
                    </div>
                    <button type="submit" class="btn btn-primary">Create</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Toast Container -->
{% if message %}
<div class="toast-container position-fixed bottom-0 end-0 p-3" style="z-index: 11">
    <div id="liveToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header">
            {% if message_type == 'success' %}
            <strong class="me-auto text-success">Success</strong>
            {% else %}
            <strong class="me-auto text-danger">Error</strong>
            {% endif %}
            <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        <div class="toast-body">
            {{ message }}
        </div>
    </div>
</div>
{% endif %}

{% endblock %}

<!-- SCRIPT -->
{% block script %}
<script>
    document.getElementById('fileInput').addEventListener('change', function () {
        const form = document.getElementById('fileUploadForm');
        const formData = new FormData(form);

        fetch('{% url "ajax_file_upload" dir_id=uid %}', {
            method: 'POST',
            body: formData,
            headers: {
                'X-CSRFToken': document.querySelector('[name=csrfmiddlewaretoken]').value,
            },
        })
        .then(response => {
            if (response.ok) {
                Swal.fire({
                    icon: 'success',
                    title: 'File Uploaded!',
                    text: 'Your file has been uploaded successfully.',
                }).then(() => {
                    location.reload();
                });
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Upload Failed',
                    text: 'File already exists or the request is invalid.',
                });
            }
        })
        .catch(error => console.error('Error uploading file:', error));
    });

    document.getElementById('backButton').addEventListener('click', function () {
        const uid = '{{ uid }}';  // Get the current uid

        if (uid === '0') {
            // If uid is '0', alert the user or do nothing
        } else {
            window.history.back(); // This will work if you're relying on browser history, but use custom logic if needed
        }
    });

    // Select All Checkbox
    document.getElementById('selectAll').addEventListener('change', function () {
        const checkboxes = document.querySelectorAll('.file-checkbox');
        checkboxes.forEach(checkbox => {
            checkbox.checked = this.checked;
        });
    });

    // Delete Selected Files/Folders
    document.getElementById('deleteSelected').addEventListener('click', function () {
        const selectedFiles = Array.from(document.querySelectorAll('.file-checkbox:checked')).map(checkbox => checkbox.dataset.id);
        if (selectedFiles.length > 0) {
            fetch('{% url "delete_files" %}', {
                method: 'POST',
                body: JSON.stringify({ file_ids: selectedFiles }),
                headers: {
                    'Content-Type': 'application/json',
                    'X-CSRFToken': document.querySelector('[name=csrfmiddlewaretoken]').value,
                },
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Deleted!',
                        text: 'Selected files/folders have been deleted.',
                    }).then(() => {
                        location.reload();
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Failed to delete files/folders.',
                    });
                }
            })
            .catch(error => console.error('Error deleting files:', error));
        } else {
            Swal.fire({
                icon: 'warning',
                title: 'No Selection',
                text: 'Please select files/folders to delete.',
            });
        }
    });

    // Share Folder
    function shareFolder(folderId) {
        // Implement share functionality
        console.log('Sharing folder:', folderId);
    }

    // Rename Folder
    function renameFolder(folderId) {
        // Implement rename functionality
        console.log('Renaming folder:', folderId);
    }

    // Share File
    function shareFile(fileId) {
        // Implement share functionality
        console.log('Sharing file:', fileId);
    }

    // Rename File
    function renameFile(fileId) {
        // Implement rename functionality
        console.log('Renaming file:', fileId);
    }
</script>
{% endblock %}